DROP TABLE IF EXISTS PASSWORD_RESET_OTPS, REGISTRATION, COURSE_INSTRUCTORS, USER_ROLE, USERS, ROLES, COURSES, TRANSACTIONS, DONORS;

-- USERS TABLE, UID ATM IS JUST INT THAT AUTO-INCREMENTS, CAN CHANGE LATER ACCORDING TO SPEC
CREATE TABLE USERS (
  UID INT PRIMARY KEY AUTO_INCREMENT,
  FIRSTNAME VARCHAR(100) NOT NULL,
  MIDDLENAME VARCHAR(100),
  LASTNAME VARCHAR(100) NOT NULL,
  DOB DATE,
  EMAIL VARCHAR(100) UNIQUE,
  PHONENUMBER VARCHAR(10) NOT NULL,
  ADDRESS VARCHAR(100) NOT NULL,
  CITY VARCHAR(25) NOT NULL,
  PROVINCE VARCHAR(2) NOT NULL,
  POSTALCODE VARCHAR(6) NOT NULL,
  PASSWORD VARCHAR(255) NOT NULL
);

CREATE TABLE ROLES (
  ROLEID INT PRIMARY KEY AUTO_INCREMENT,
  ROLENAME VARCHAR(25) NOT NULL
);



-- JUNCTION TABLES

-- REGISTRATION
CREATE TABLE REGISTRATION (
  UID INT,
  COURSEID INT,
  PRIMARY KEY (UID, COURSEID),
  FOREIGN KEY (UID) REFERENCES USERS(UID) ON DELETE CASCADE,
  FOREIGN KEY (COURSEID) REFERENCES COURSES(COURSEID) ON DELETE CASCADE
);

-- USER_ROLES JUNCTION TABLE
CREATE TABLE USER_ROLE (
  UID INT,
  ROLEID INT,
  PRIMARY KEY (UID, ROLEID),
  FOREIGN KEY (UID) REFERENCES USERS(UID) ON DELETE CASCADE,
  FOREIGN KEY (ROLEID) REFERENCES ROLES(ROLEID) ON DELETE CASCADE
);


CREATE TABLE PASSWORD_RESET_OTPS (
  ID INT PRIMARY KEY AUTO_INCREMENT,
  UID INT NOT NULL,
  OTP VARCHAR(10) NOT NULL,
  EXPIRESAT DATETIME NOT NULL,
  USED BOOLEAN DEFAULT FALSE,
  CREATEDAT DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE DONORS (
  DONOR_ID INT PRIMARY KEY AUTO_INCREMENT,
  UID INT NULL,
  EMAIL VARCHAR(255) UNIQUE,
  FIRSTNAME VARCHAR(100) NOT NULL,
  LASTNAME VARCHAR(100) NOT NULL,
  AMOUNT_DONATED DECIMAL(12, 2) DEFAULT 0,
  LAST_DONATION_AT DATETIME,
  FOREIGN KEY (UID) REFERENCES USERS(UID)
);

CREATE TABLE TRANSACTIONS (
  TRANSACTION_ID INT PRIMARY KEY AUTO_INCREMENT,
  EMAIL VARCHAR(255) NOT NULL,
  DONOR_ID INT NULL,
  AMOUNT DECIMAL(12, 2) NOT NULL,
  METHOD VARCHAR(100) NOT NULL,
  TRANSACTION_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
  ADDRESS VARCHAR(100),
  CITY VARCHAR(25),
  PROVINCE VARCHAR(2),
  POSTALCODE VARCHAR(6),
  NOTES TEXT,
  RECEIPT_NUMBER VARCHAR(100) UNIQUE,
  FOREIGN KEY (DONOR_ID) REFERENCES DONORS(DONOR_ID)
);

-- COURSES/MODULE/TOPICS etc.
CREATE TABLE COURSES (
  COURSEID INT PRIMARY KEY AUTO_INCREMENT,
  TITLE VARCHAR(100),
  STARTDATE DATETIME NOT NULL,
  ENDDATE DATETIME NOT NULL,
  LOCATION VARCHAR(100)
);

CREATE TABLE COURSE_SCHEDULE (
  SCHEDULEID INT PRIMARY KEY AUTO_INCREMENT,
  COURSEID INT NOT NULL,
  WEEKDAY ENUM('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday') NOT NULL,
  START_TIME TIME NOT NULL,
  END_TIME TIME NOT NULL,
  FOREIGN KEY (COURSEID) REFERENCES COURSES(COURSEID) ON DELETE CASCADE
);

CREATE TABLE COURSE_INSTRUCTORS (
  COURSEID INT NOT NULL,
  UID INT NOT NULL,
  PRIMARY KEY (COURSEID, UID),
  FOREIGN KEY (COURSEID) REFERENCES COURSES(COURSEID) ON DELETE CASCADE,
  FOREIGN KEY (UID) REFERENCES USERS(UID) ON DELETE CASCADE
);

CREATE TABLE MODULES (
  MODULEID INT PRIMARY KEY AUTO_INCREMENT,
  COURSEID INT NOT NULL,
  TITLE VARCHAR(100) NOT NULL,
  DESCRIPTION TEXT,
  ORDER_INDEX INT, -- For ordering modules in a course
  FOREIGN KEY (COURSEID) REFERENCES COURSES(COURSEID) ON DELETE CASCADE
);

CREATE TABLE TOPICS (
  TOPICID INT PRIMARY KEY AUTO_INCREMENT,
  MODULEID INT NOT NULL,
  TITLE VARCHAR(100) NOT NULL,
  CONTENT TEXT, 
  ORDER_INDEX INT, -- For ordering topics within a module
  FOREIGN KEY (MODULEID) REFERENCES MODULES(MODULEID) ON DELETE CASCADE
);

-- can be used to store resources like pds, videoos, etc, maybe overkill
CREATE TABLE TOPIC_RESOURCES (
  RESOURCEID INT PRIMARY KEY AUTO_INCREMENT,
  TOPICID INT NOT NULL,
  TYPE ENUM('video', 'pdf', 'link', 'file', 'text') NOT NULL,
  TITLE VARCHAR(100),
  URL TEXT, -- file path or external URL
  DESCRIPTION TEXT,
  ORDER_INDEX INT,
  FOREIGN KEY (TOPICID) REFERENCES TOPICS(TOPICID) ON DELETE CASCADE
);

CREATE TABLE ENROLLMENTS (
  ENROLLMENTID INT PRIMARY KEY AUTO_INCREMENT,
  UID INT NOT NULL,
  COURSEID INT NOT NULL,
  ENROLL_DATE DATETIME DEFAULT CURRENT_TIMESTAMP,
  STATUS ENUM('active', 'completed', 'withdrawn', 'failed') DEFAULT 'active',
  FINAL_GRADE DECIMAL(5,2),
  FOREIGN KEY (UID) REFERENCES USERS(UID) ON DELETE CASCADE,
  FOREIGN KEY (COURSEID) REFERENCES COURSES(COURSEID) ON DELETE CASCADE,
  UNIQUE (UID, COURSEID) -- prevent duplicate enrollments
);

CREATE TABLE TOPIC_PROGRESS (
  UID INT NOT NULL,
  TOPICID INT NOT NULL,
  COMPLETED BOOLEAN DEFAULT FALSE,
  COMPLETED_AT DATETIME,
  PRIMARY KEY (UID, TOPICID),
  FOREIGN KEY (UID) REFERENCES USERS(UID) ON DELETE CASCADE,
  FOREIGN KEY (TOPICID) REFERENCES TOPICS(TOPICID) ON DELETE CASCADE
);

CREATE TABLE ASSESSMENTS (
  ASSESSMENTID INT PRIMARY KEY AUTO_INCREMENT,
  MODULEID INT NOT NULL,
  TITLE VARCHAR(100) NOT NULL,
  TYPE ENUM('quiz', 'assignment', 'exam') NOT NULL,
  WEIGHT DECIMAL(5,2) NOT NULL DEFAULT 1.0,
  MAX_SCORE DECIMAL(6,2) NOT NULL DEFAULT 100,
  DUE_DATE DATETIME,
  FOREIGN KEY (MODULEID) REFERENCES MODULES(MODULEID) ON DELETE CASCADE
);

CREATE TABLE ASSESSMENT_SUBMISSIONS (
  SUBMISSIONID INT PRIMARY KEY AUTO_INCREMENT,
  ASSESSMENTID INT NOT NULL,
  UID INT NOT NULL,
  SCORE DECIMAL(6,2),
  SUBMITTED_AT DATETIME DEFAULT CURRENT_TIMESTAMP,
  FEEDBACK TEXT,
  MANUALLY_GRADED BOOLEAN DEFAULT FALSE,
  FOREIGN KEY (ASSESSMENTID) REFERENCES ASSESSMENTS(ASSESSMENTID) ON DELETE CASCADE,
  FOREIGN KEY (UID) REFERENCES USERS(UID) ON DELETE CASCADE,
  UNIQUE (ASSESSMENTID, UID)
);

CREATE TABLE SESSIONS (
  SESSIONID INT PRIMARY KEY AUTO_INCREMENT,
  COURSEID INT NOT NULL,
  SESSION_DATE DATE NOT NULL,
  START_TIME TIME,
  END_TIME TIME,
  INSTRUCTOR_UID INT,
  FOREIGN KEY (COURSEID) REFERENCES COURSES(COURSEID) ON DELETE CASCADE,
  FOREIGN KEY (INSTRUCTOR_UID) REFERENCES USERS(UID)
);

CREATE TABLE ATTENDANCE_RECORDS (
  SESSIONID INT NOT NULL,
  UID INT NOT NULL,
  STATUS ENUM('present', 'absent', 'late', 'excused') NOT NULL DEFAULT 'present',
  PRIMARY KEY (SESSIONID, UID),
  FOREIGN KEY (SESSIONID) REFERENCES SESSIONS(SESSIONID) ON DELETE CASCADE,
  FOREIGN KEY (UID) REFERENCES USERS(UID) ON DELETE CASCADE
);


INSERT INTO USERS (FIRSTNAME, MIDDLENAME, LASTNAME, DOB, EMAIL, PASSWORD, PHONENUMBER, ADDRESS, CITY, PROVINCE, POSTALCODE)
VALUES 
('Ali', 'Ahmed', 'Khan', '1990-04-20', 'ali.khan@example.com', '$2a$12$t.dfg8H85VmdBrlXF2IK4uiE5PfyZYyc3hP83F4vbeCD4tWpRB1eS', '6045551234', '123 Main St', 'Vancouver', 'BC', 'V5K0A1'),
('Ubada', NULL, 'Raja', '1995-09-15', 'ubada.r@example.com','$2a$12$t.dfg8H85VmdBrlXF2IK4uiE5PfyZYyc3hP83F4vbeCD4tWpRB1eS', '6045555678', '456 Oak Ave', 'Burnaby', 'BC', 'V5C2Z4'),
('Yusuf', 'Ibrahim', 'Ali', '2000-01-05', 'yusuf.s@example.com', '$2a$12$t.dfg8H85VmdBrlXF2IK4uiE5PfyZYyc3hP83F4vbeCD4tWpRB1eS', '6045559876', '789 Pine Rd', 'Surrey', 'BC', 'V3T3W2'),
('Hamza', 'Omar', 'Siddiqui', '1997-07-18', 'hamza.s@example.com','$2a$12$t.dfg8H85VmdBrlXF2IK4uiE5PfyZYyc3hP83F4vbeCD4tWpRB1eS', '6045551122', '159 Maple St', 'Surrey', 'BC', 'V3W5N9'),
('Khalid', NULL, 'Hussein', '1992-02-25', 'khalid.h@example.com','$2a$12$t.dfg8H85VmdBrlXF2IK4uiE5PfyZYyc3hP83F4vbeCD4tWpRB1eS', '6045553344', '753 Birch Ave', 'Burnaby', 'BC', 'V5A3L7'),
('Imran', 'Yusuf', 'Malik', '1989-10-03', 'imran.m@example.com','$2a$12$t.dfg8H85VmdBrlXF2IK4uiE5PfyZYyc3hP83F4vbeCD4tWpRB1eS', '6045555566', '852 Willow Rd', 'Vancouver', 'BC', 'V5Z2M3'),
('Zaid', NULL, 'Qureshi', '2001-12-29', 'zaid.q@example.com', '$2a$12$t.dfg8H85VmdBrlXF2IK4uiE5PfyZYyc3hP83F4vbeCD4tWpRB1eS', '6045557788', '456 Aspen Dr', 'Delta', 'BC', 'V4C4X2'),
('Adnan', 'Ibrahim', 'Farooq', '1995-04-14', 'adnan.f@example.com', '$2a$12$t.dfg8H85VmdBrlXF2IK4uiE5PfyZYyc3hP83F4vbeCD4tWpRB1eS', '6045559900', '963 Oak Crescent', 'Richmond', 'BC', 'V6Y3G4');

INSERT INTO COURSES (TITLE, STARTDATE, ENDDATE, SCHEDULE, LOCATION)
VALUES 
('Quran Memorization Class', '2025-07-01 18:00:00', '2025-09-30 20:00:00', 'Monday, Wednesday', 'Masjid Hall'),
('Beginner Arabic Workshop', '2025-07-10 17:00:00', '2025-08-25 19:00:00', 'Tuesday, Thursday', 'Community Center Room B'),
('Summer Youth Camp', '2025-08-05 09:00:00', '2025-08-20 12:00:00', 'Monday, Tuesday, Wednesday, Thursday, Friday', 'Zoom');

INSERT INTO ROLES (ROLENAME) VALUES
('Admin'),
('Instructor'),
('Parent'),
('Student'),
('Donor');

INSERT INTO USER_ROLE (UID, ROLEID)
VALUES
(2, 2),
(1, 4),
(3, 4),
(5, 1),
(6, 3);


